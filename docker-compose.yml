version: '3.8'

services:
  db:
    image: postgres:latest
    ports:
      - '5432:5432'
    restart: always
    environment:
      POSTGRES_PASSWORD: ads123
      POSTGRES_USER: tcss460
      POSTGRES_DB: tcss460
    container_name: lecture-db
    volumes:
      - ~/apps/postgres:/var/lib/postgresql/data
      - ./data/init.sql:/docker-entrypoint-initdb.d/init.sql

  data_loader:
    build:
      context: .
      dockerfile: Dockerfile.data_loader
    depends_on:
      - db
    environment:
      POSTGRES_PASSWORD: ads123
      POSTGRES_USER: tcss460
      POSTGRES_DB: tcss460
      DB_HOST: db
    volumes:
      - ./load_data.py:/app/load_data.py
      - ./data/books.csv:/app/books.csv
    entrypoint: ["python", "/app/load_data.py"]

  ts-node-docker:
    build:
      context: .
      dockerfile: Dockerfile
      target: base
    env_file:
      - .env-docker
    volumes:
      - ./src:/home/node/app/src
      - ./nodemon.json:/home/node/app/nodemon.json
    container_name: lecture-back-end
    expose:
      - '4000'
    ports:
      - '4000:4000'
    depends_on:
      - db
      - data_loader # Ensure data_loader completes before starting the API
    command: npm run dev

